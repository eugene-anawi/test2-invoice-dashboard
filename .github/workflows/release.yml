name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## Changes since $PREVIOUS_TAG" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD | grep -v "^- Merge" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            # ${{ steps.get_version.outputs.VERSION }}
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            ```bash
            git clone https://github.com/eugene-anawi/test2-invoice-dashboard.git
            cd test2-invoice-dashboard
            git checkout ${{ steps.get_version.outputs.VERSION }}
            mix deps.get
            mix ecto.migrate
            mix phx.server
            ```
            
            ## Docker
            
            ```bash
            docker pull ghcr.io/eugene-anawi/test2-invoice-dashboard:${{ steps.get_version.outputs.VERSION }}
            ```
          draft: false
          prerelease: false

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.15'
          otp-version: '26'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update version in mix.exs
        run: |
          sed -i 's/version: "[^"]*"/version: "${{ steps.get_version.outputs.VERSION }}"/' mix.exs

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests
        run: mix test

      - name: Build release
        run: |
          MIX_ENV=prod mix compile
          MIX_ENV=prod mix assets.deploy
          MIX_ENV=prod mix release

      - name: Create tarball
        run: |
          tar -czf test2-invoice-dashboard-${{ steps.get_version.outputs.VERSION }}.tar.gz -C _build/prod/rel/test2 .

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./test2-invoice-dashboard-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: test2-invoice-dashboard-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip