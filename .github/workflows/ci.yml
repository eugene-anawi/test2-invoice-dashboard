name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test2_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.15'
          otp-version: '26'

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Cache _build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test --cover
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test2_test
          REDIS_URL: redis://localhost:6379

      - name: Generate coverage report
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test2_test
          REDIS_URL: redis://localhost:6379

  assets:
    name: Assets Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            assets/package-lock.json
            dashboard/package-lock.json

      - name: Install Phoenix assets dependencies
        run: |
          cd assets
          npm ci

      - name: Install Dashboard dependencies
        run: |
          cd dashboard
          npm ci

      - name: Build Phoenix assets
        run: |
          cd assets
          npm run build

      - name: Build Dashboard
        run: |
          cd dashboard
          npm run build

      - name: Test Dashboard
        run: |
          cd dashboard
          npm run test

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.15'
          otp-version: '26'

      - name: Install dependencies
        run: mix deps.get

      - name: Security audit
        run: mix deps.audit

      - name: Check for retired packages
        run: mix hex.audit

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.15'
          otp-version: '26'

      - name: Install dependencies
        run: mix deps.get

      - name: Check unused dependencies
        run: mix deps.unlock --check-unused

      - name: Check for warnings
        run: mix compile --warnings-as-errors

      - name: Dialyzer PLT cache
        uses: actions/cache@v3
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyzer-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-dialyzer-

      - name: Run Dialyzer
        run: mix dialyzer --format github

  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, assets, security, quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy notification
        run: |
          echo "ðŸš€ Deploying to staging environment"
          echo "âœ… All checks passed - ready for deployment"
          # Add your deployment steps here
          # For example: deploy to Fly.io, Railway, or your preferred platform